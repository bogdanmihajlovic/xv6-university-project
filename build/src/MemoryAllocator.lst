GAS LISTING /tmp/ccimT1pG.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocatorC2Ev
   9              	_ZN15MemoryAllocatorC2Ev:
  10              	.LFB1:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by bogdan on 10.7.22..
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** MemoryAllocator::MemoryAllocator() {
  12              		.loc 1 7 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LBB2:
   8:src/MemoryAllocator.cpp ****     head = (FreeBlock*)HEAP_START_ADDR;
  22              		.loc 1 8 5
  23              		.loc 1 8 10 is_stmt 0
  24 000c 97070000 		la	a5,HEAP_START_ADDR
  24      83B70700 
  25 0014 03B70700 		ld	a4,0(a5)
  26 0018 2330E500 		sd	a4,0(a0)
   9:src/MemoryAllocator.cpp ****     head->size = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR - sizeof(FreeBlock);
  27              		.loc 1 9 5 is_stmt 1
  28              		.loc 1 9 40 is_stmt 0
  29 001c 97070000 		la	a5,HEAP_END_ADDR
  29      83B70700 
  30 0024 83B70700 		ld	a5,0(a5)
  31 0028 B387E740 		sub	a5,a5,a4
  32              		.loc 1 9 66
  33 002c 938787FE 		addi	a5,a5,-24
  34              		.loc 1 9 16
  35 0030 2338F700 		sd	a5,16(a4)
  10:src/MemoryAllocator.cpp ****     head->next = 0;
  36              		.loc 1 10 5 is_stmt 1
  37 0034 83370500 		ld	a5,0(a0)
  38              		.loc 1 10 16 is_stmt 0
  39 0038 23B00700 		sd	zero,0(a5)
  11:src/MemoryAllocator.cpp ****     head->prev = 0;
  40              		.loc 1 11 5 is_stmt 1
  41 003c 83370500 		ld	a5,0(a0)
  42              		.loc 1 11 16 is_stmt 0
  43 0040 23B40700 		sd	zero,8(a5)
  12:src/MemoryAllocator.cpp ****     tail = head;
  44              		.loc 1 12 5 is_stmt 1
GAS LISTING /tmp/ccimT1pG.s 			page 2


  45              		.loc 1 12 12 is_stmt 0
  46 0044 83370500 		ld	a5,0(a0)
  47              		.loc 1 12 10
  48 0048 2334F500 		sd	a5,8(a0)
  49              	.LBE2:
  13:src/MemoryAllocator.cpp **** }
  50              		.loc 1 13 1
  51 004c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0050 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0054 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE1:
  60              		.globl	_ZN15MemoryAllocatorC1Ev
  61              		.set	_ZN15MemoryAllocatorC1Ev,_ZN15MemoryAllocatorC2Ev
  62              		.align	2
  63              		.globl	_ZN15MemoryAllocator11getInstanceEv
  65              	_ZN15MemoryAllocator11getInstanceEv:
  66              	.LFB3:
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** 
  16:src/MemoryAllocator.cpp **** MemoryAllocator& MemoryAllocator::getInstance() {
  67              		.loc 1 16 49 is_stmt 1
  68              		.cfi_startproc
  17:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  69              		.loc 1 17 5
  70              		.loc 1 17 28 is_stmt 0
  71 0058 97070000 		lbu	a5,.LANCHOR0
  71      83C70700 
  72 0060 63880700 		beqz	a5,.L9
  18:src/MemoryAllocator.cpp ****     return instance;
  73              		.loc 1 18 5 is_stmt 1
  19:src/MemoryAllocator.cpp **** }
  74              		.loc 1 19 1 is_stmt 0
  75 0064 17050000 		lla	a0,.LANCHOR0+8
  75      13050500 
  76 006c 67800000 		ret
  77              	.L9:
  16:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  78              		.loc 1 16 49 discriminator 1
  79 0070 130101FF 		addi	sp,sp,-16
  80              		.cfi_def_cfa_offset 16
  81 0074 23341100 		sd	ra,8(sp)
  82 0078 23308100 		sd	s0,0(sp)
  83              		.cfi_offset 1, -8
  84              		.cfi_offset 8, -16
  85 007c 13040101 		addi	s0,sp,16
  86              		.cfi_def_cfa 8, 0
  17:src/MemoryAllocator.cpp ****     return instance;
  87              		.loc 1 17 28 discriminator 1
  88 0080 17050000 		lla	a0,.LANCHOR0+8
  88      13050500 
  89 0088 97000000 		call	_ZN15MemoryAllocatorC1Ev
  89      E7800000 
  90              	.LVL1:
GAS LISTING /tmp/ccimT1pG.s 			page 3


  91 0090 93071000 		li	a5,1
  92 0094 17070000 		sb	a5,.LANCHOR0,a4
  92      2300F700 
  18:src/MemoryAllocator.cpp **** }
  93              		.loc 1 18 5 is_stmt 1 discriminator 1
  94              		.loc 1 19 1 is_stmt 0 discriminator 1
  95 009c 17050000 		lla	a0,.LANCHOR0+8
  95      13050500 
  96 00a4 83308100 		ld	ra,8(sp)
  97              		.cfi_restore 1
  98 00a8 03340100 		ld	s0,0(sp)
  99              		.cfi_restore 8
 100              		.cfi_def_cfa 2, 16
 101 00ac 13010101 		addi	sp,sp,16
 102              		.cfi_def_cfa_offset 0
 103 00b0 67800000 		jr	ra
 104              		.cfi_endproc
 105              	.LFE3:
 107              		.align	2
 108              		.globl	_ZN15MemoryAllocator9getMemoryEm
 110              	_ZN15MemoryAllocator9getMemoryEm:
 111              	.LFB4:
  20:src/MemoryAllocator.cpp **** 
  21:src/MemoryAllocator.cpp **** 
  22:src/MemoryAllocator.cpp **** void* MemoryAllocator::getMemory(size_t size)  {
 112              		.loc 1 22 48 is_stmt 1
 113              		.cfi_startproc
 114              	.LVL2:
 115 00b4 130101FF 		addi	sp,sp,-16
 116              		.cfi_def_cfa_offset 16
 117 00b8 23348100 		sd	s0,8(sp)
 118              		.cfi_offset 8, -8
 119 00bc 13040101 		addi	s0,sp,16
 120              		.cfi_def_cfa 8, 0
 121 00c0 13070500 		mv	a4,a0
  23:src/MemoryAllocator.cpp ****     FreeBlock* blk = head;
 122              		.loc 1 23 5
 123              		.loc 1 23 16 is_stmt 0
 124 00c4 03350500 		ld	a0,0(a0)
 125              	.LVL3:
  24:src/MemoryAllocator.cpp **** 
  25:src/MemoryAllocator.cpp ****     // round size to MEM_BLOCK_SIZE
  26:src/MemoryAllocator.cpp ****     size_t temp = size / MEM_BLOCK_SIZE;
 126              		.loc 1 26 5 is_stmt 1
  27:src/MemoryAllocator.cpp ****     size = (temp * MEM_BLOCK_SIZE == size) ? size : (temp + 1)*MEM_BLOCK_SIZE;
 127              		.loc 1 27 5
 128              		.loc 1 27 18 is_stmt 0
 129 00c8 93F605FC 		andi	a3,a1,-64
 130              		.loc 1 27 44
 131 00cc 6388B600 		beq	a3,a1,.L13
 132 00d0 93D76500 		srli	a5,a1,6
 133              	.LVL4:
 134              		.loc 1 27 59 discriminator 1
 135 00d4 93851700 		addi	a1,a5,1
 136              	.LVL5:
 137              		.loc 1 27 44 discriminator 1
 138 00d8 93956500 		slli	a1,a1,6
GAS LISTING /tmp/ccimT1pG.s 			page 4


 139              	.LVL6:
 140              	.L13:
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp ****     // Try to find free block
  30:src/MemoryAllocator.cpp ****     for (; blk != nullptr; blk = blk->next)
 141              		.loc 1 30 5 is_stmt 1 discriminator 1
 142              		.loc 1 30 16 discriminator 1
 143 00dc 630A0500 		beqz	a0,.L12
  31:src/MemoryAllocator.cpp ****         if (blk->size >= size) break;
 144              		.loc 1 31 9
 145              		.loc 1 31 18 is_stmt 0
 146 00e0 83370501 		ld	a5,16(a0)
 147              		.loc 1 31 9
 148 00e4 63F6B700 		bgeu	a5,a1,.L12
  30:src/MemoryAllocator.cpp ****         if (blk->size >= size) break;
 149              		.loc 1 30 5 is_stmt 1
  30:src/MemoryAllocator.cpp ****         if (blk->size >= size) break;
 150              		.loc 1 30 32 is_stmt 0
 151 00e8 03350500 		ld	a0,0(a0)
 152              	.LVL7:
  30:src/MemoryAllocator.cpp ****         if (blk->size >= size) break;
 153              		.loc 1 30 5
 154 00ec 6FF01FFF 		j	.L13
 155              	.L12:
  32:src/MemoryAllocator.cpp **** 
  33:src/MemoryAllocator.cpp ****     // If not found
  34:src/MemoryAllocator.cpp ****     if (blk == nullptr) {
 156              		.loc 1 34 5 is_stmt 1
 157 00f0 63080504 		beqz	a0,.L10
  35:src/MemoryAllocator.cpp ****         return 0;
  36:src/MemoryAllocator.cpp ****     }
  37:src/MemoryAllocator.cpp **** 
  38:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - size;
 158              		.loc 1 38 5
 159              		.loc 1 38 33 is_stmt 0
 160 00f4 83370501 		ld	a5,16(a0)
 161              		.loc 1 38 12
 162 00f8 B387B740 		sub	a5,a5,a1
 163              	.LVL8:
  39:src/MemoryAllocator.cpp **** 
  40:src/MemoryAllocator.cpp ****     if (remainingSize >= sizeof(FreeBlock) + MEM_BLOCK_SIZE) { // Shrink block and make a new one
 164              		.loc 1 40 5 is_stmt 1
 165              	.LBB3:
 166 00fc 93067005 		li	a3,87
 167 0100 63FCF604 		bleu	a5,a3,.L15
 168              	.LBB4:
  41:src/MemoryAllocator.cpp ****         blk->size = size;
 169              		.loc 1 41 9
 170              		.loc 1 41 19 is_stmt 0
 171 0104 2338B500 		sd	a1,16(a0)
  42:src/MemoryAllocator.cpp ****         size_t offset = sizeof(FreeBlock) + size;
 172              		.loc 1 42 9 is_stmt 1
 173              		.loc 1 42 16 is_stmt 0
 174 0108 93858501 		addi	a1,a1,24
 175              	.LVL9:
  43:src/MemoryAllocator.cpp ****         FreeBlock* newBlk = (FreeBlock*)((char*)blk + offset);
 176              		.loc 1 43 9 is_stmt 1
GAS LISTING /tmp/ccimT1pG.s 			page 5


 177              		.loc 1 43 20 is_stmt 0
 178 010c B305B500 		add	a1,a0,a1
 179              	.LVL10:
  44:src/MemoryAllocator.cpp ****         if (blk->prev) {
 180              		.loc 1 44 9 is_stmt 1
 181              		.loc 1 44 18 is_stmt 0
 182 0110 83368500 		ld	a3,8(a0)
 183              		.loc 1 44 9
 184 0114 638C0602 		beqz	a3,.L16
  45:src/MemoryAllocator.cpp ****             blk->prev->next = newBlk;
 185              		.loc 1 45 13 is_stmt 1
 186              		.loc 1 45 29 is_stmt 0
 187 0118 23B0B600 		sd	a1,0(a3)
 188              	.LVL11:
  46:src/MemoryAllocator.cpp ****             newBlk->prev = blk->prev;
 189              		.loc 1 46 13 is_stmt 1
 190              		.loc 1 46 33 is_stmt 0
 191 011c 03378500 		ld	a4,8(a0)
 192              	.LVL12:
 193              		.loc 1 46 26
 194 0120 23B4E500 		sd	a4,8(a1)
 195              	.L17:
  47:src/MemoryAllocator.cpp ****         }
  48:src/MemoryAllocator.cpp ****         else {
  49:src/MemoryAllocator.cpp ****             head = newBlk;
  50:src/MemoryAllocator.cpp ****             head->prev = 0;
  51:src/MemoryAllocator.cpp ****         }
  52:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 196              		.loc 1 52 9 is_stmt 1
 197              		.loc 1 52 29 is_stmt 0
 198 0124 03370500 		ld	a4,0(a0)
 199              		.loc 1 52 22
 200 0128 23B0E500 		sd	a4,0(a1)
  53:src/MemoryAllocator.cpp ****         newBlk->size = remainingSize - sizeof(FreeBlock);
 201              		.loc 1 53 9 is_stmt 1
 202              		.loc 1 53 38 is_stmt 0
 203 012c 938787FE 		addi	a5,a5,-24
 204              	.LVL13:
 205              		.loc 1 53 22
 206 0130 23B8F500 		sd	a5,16(a1)
 207              	.LVL14:
 208              	.L18:
 209              	.LBE4:
 210              	.LBE3:
  54:src/MemoryAllocator.cpp ****     } else { // Allocate entire block
  55:src/MemoryAllocator.cpp ****         if (blk->prev) {
  56:src/MemoryAllocator.cpp ****             blk->prev->next = blk->next;
  57:src/MemoryAllocator.cpp ****             if(blk->next) blk->next->prev = blk->prev;
  58:src/MemoryAllocator.cpp ****         }
  59:src/MemoryAllocator.cpp ****         else {
  60:src/MemoryAllocator.cpp ****             head = blk->next;
  61:src/MemoryAllocator.cpp ****             head->prev = 0;
  62:src/MemoryAllocator.cpp ****         }
  63:src/MemoryAllocator.cpp ****     }
  64:src/MemoryAllocator.cpp ****     blk->next = 0;
 211              		.loc 1 64 5 is_stmt 1
 212              		.loc 1 64 15 is_stmt 0
GAS LISTING /tmp/ccimT1pG.s 			page 6


 213 0134 23300500 		sd	zero,0(a0)
  65:src/MemoryAllocator.cpp ****     blk->prev = 0;
 214              		.loc 1 65 5 is_stmt 1
 215              		.loc 1 65 15 is_stmt 0
 216 0138 23340500 		sd	zero,8(a0)
  66:src/MemoryAllocator.cpp ****     return (char*)blk + sizeof(FreeBlock);
 217              		.loc 1 66 5 is_stmt 1
 218              		.loc 1 66 41 is_stmt 0
 219 013c 13058501 		addi	a0,a0,24
 220              	.LVL15:
 221              	.L10:
  67:src/MemoryAllocator.cpp **** }
 222              		.loc 1 67 1
 223 0140 03348100 		ld	s0,8(sp)
 224              		.cfi_remember_state
 225              		.cfi_restore 8
 226              		.cfi_def_cfa 2, 16
 227 0144 13010101 		addi	sp,sp,16
 228              		.cfi_def_cfa_offset 0
 229 0148 67800000 		jr	ra
 230              	.LVL16:
 231              	.L16:
 232              		.cfi_restore_state
 233              	.LBB6:
 234              	.LBB5:
  49:src/MemoryAllocator.cpp ****             head->prev = 0;
 235              		.loc 1 49 13 is_stmt 1
  49:src/MemoryAllocator.cpp ****             head->prev = 0;
 236              		.loc 1 49 18 is_stmt 0
 237 014c 2330B700 		sd	a1,0(a4)
 238              	.LVL17:
  50:src/MemoryAllocator.cpp ****         }
 239              		.loc 1 50 13 is_stmt 1
  50:src/MemoryAllocator.cpp ****         }
 240              		.loc 1 50 24 is_stmt 0
 241 0150 23B40500 		sd	zero,8(a1)
 242 0154 6FF01FFD 		j	.L17
 243              	.LVL18:
 244              	.L15:
 245              	.LBE5:
  55:src/MemoryAllocator.cpp ****             blk->prev->next = blk->next;
 246              		.loc 1 55 9 is_stmt 1
  55:src/MemoryAllocator.cpp ****             blk->prev->next = blk->next;
 247              		.loc 1 55 18 is_stmt 0
 248 0158 83378500 		ld	a5,8(a0)
 249              	.LVL19:
  55:src/MemoryAllocator.cpp ****             blk->prev->next = blk->next;
 250              		.loc 1 55 9
 251 015c 63800702 		beqz	a5,.L19
  56:src/MemoryAllocator.cpp ****             if(blk->next) blk->next->prev = blk->prev;
 252              		.loc 1 56 13 is_stmt 1
  56:src/MemoryAllocator.cpp ****             if(blk->next) blk->next->prev = blk->prev;
 253              		.loc 1 56 36 is_stmt 0
 254 0160 03370500 		ld	a4,0(a0)
 255              	.LVL20:
  56:src/MemoryAllocator.cpp ****             if(blk->next) blk->next->prev = blk->prev;
 256              		.loc 1 56 29
GAS LISTING /tmp/ccimT1pG.s 			page 7


 257 0164 23B0E700 		sd	a4,0(a5)
 258              	.LVL21:
  57:src/MemoryAllocator.cpp ****         }
 259              		.loc 1 57 13 is_stmt 1
  57:src/MemoryAllocator.cpp ****         }
 260              		.loc 1 57 21 is_stmt 0
 261 0168 83370500 		ld	a5,0(a0)
  57:src/MemoryAllocator.cpp ****         }
 262              		.loc 1 57 13
 263 016c E38407FC 		beqz	a5,.L18
  57:src/MemoryAllocator.cpp ****         }
 264              		.loc 1 57 27 is_stmt 1 discriminator 1
  57:src/MemoryAllocator.cpp ****         }
 265              		.loc 1 57 50 is_stmt 0 discriminator 1
 266 0170 03378500 		ld	a4,8(a0)
  57:src/MemoryAllocator.cpp ****         }
 267              		.loc 1 57 43 discriminator 1
 268 0174 23B4E700 		sd	a4,8(a5)
 269 0178 6FF0DFFB 		j	.L18
 270              	.LVL22:
 271              	.L19:
  60:src/MemoryAllocator.cpp ****             head->prev = 0;
 272              		.loc 1 60 13 is_stmt 1
  60:src/MemoryAllocator.cpp ****             head->prev = 0;
 273              		.loc 1 60 25 is_stmt 0
 274 017c 83370500 		ld	a5,0(a0)
  60:src/MemoryAllocator.cpp ****             head->prev = 0;
 275              		.loc 1 60 18
 276 0180 2330F700 		sd	a5,0(a4)
 277              	.LVL23:
  61:src/MemoryAllocator.cpp ****         }
 278              		.loc 1 61 13 is_stmt 1
  61:src/MemoryAllocator.cpp ****         }
 279              		.loc 1 61 24 is_stmt 0
 280 0184 23B40700 		sd	zero,8(a5)
 281 0188 6FF0DFFA 		j	.L18
 282              	.LBE6:
 283              		.cfi_endproc
 284              	.LFE4:
 286              		.align	2
 287              		.globl	_ZN15MemoryAllocator10tryToMergeEPNS_9FreeBlockE
 289              	_ZN15MemoryAllocator10tryToMergeEPNS_9FreeBlockE:
 290              	.LFB6:
  68:src/MemoryAllocator.cpp **** 
  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp **** int MemoryAllocator::freeMemory(void* addr) {
  71:src/MemoryAllocator.cpp **** 
  72:src/MemoryAllocator.cpp ****     // Check address
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
  74:src/MemoryAllocator.cpp ****         return -1;
  75:src/MemoryAllocator.cpp ****     }
  76:src/MemoryAllocator.cpp **** 
  77:src/MemoryAllocator.cpp ****     // Find where to put new block
  78:src/MemoryAllocator.cpp ****     FreeBlock* blk;
  79:src/MemoryAllocator.cpp ****     if ( !head || (char*)addr < (char*)head)
  80:src/MemoryAllocator.cpp ****         blk = 0;
  81:src/MemoryAllocator.cpp ****     else
GAS LISTING /tmp/ccimT1pG.s 			page 8


  82:src/MemoryAllocator.cpp ****         for ( blk = head; blk->next != 0 && (char*)addr > (char*)(blk->next); blk = blk->next);
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp ****     // Insert the new block after cur:
  85:src/MemoryAllocator.cpp ****     FreeBlock* newBlk = (FreeBlock*)((char*)addr - sizeof(FreeBlock));
  86:src/MemoryAllocator.cpp ****     newBlk->prev = blk;
  87:src/MemoryAllocator.cpp ****     if (blk) newBlk->next = blk->next;
  88:src/MemoryAllocator.cpp ****     else newBlk->next = head;
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
  90:src/MemoryAllocator.cpp ****     if (blk) blk->next = newBlk;
  91:src/MemoryAllocator.cpp ****     else head = newBlk;
  92:src/MemoryAllocator.cpp **** 
  93:src/MemoryAllocator.cpp ****     // tryToMerge with next block
  94:src/MemoryAllocator.cpp ****     tryToMerge(newBlk);
  95:src/MemoryAllocator.cpp ****     tryToMerge(blk);
  96:src/MemoryAllocator.cpp **** 
  97:src/MemoryAllocator.cpp ****     return 0;
  98:src/MemoryAllocator.cpp **** }
  99:src/MemoryAllocator.cpp **** 
 100:src/MemoryAllocator.cpp **** void MemoryAllocator::tryToMerge(FreeBlock* blk)  {
 291              		.loc 1 100 51 is_stmt 1
 292              		.cfi_startproc
 293              	.LVL24:
 294 018c 130101FF 		addi	sp,sp,-16
 295              		.cfi_def_cfa_offset 16
 296 0190 23348100 		sd	s0,8(sp)
 297              		.cfi_offset 8, -8
 298 0194 13040101 		addi	s0,sp,16
 299              		.cfi_def_cfa 8, 0
 101:src/MemoryAllocator.cpp ****     if (!blk)
 300              		.loc 1 101 5
 301 0198 638C0500 		beqz	a1,.L21
 102:src/MemoryAllocator.cpp ****         return ;
 103:src/MemoryAllocator.cpp **** 
 104:src/MemoryAllocator.cpp ****     if (blk->next && (char*)blk + blk->size == (char*)(blk->next)) {
 302              		.loc 1 104 5
 303              		.loc 1 104 14 is_stmt 0
 304 019c 83B70500 		ld	a5,0(a1)
 305              		.loc 1 104 5
 306 01a0 63880700 		beqz	a5,.L21
 307              		.loc 1 104 40 discriminator 1
 308 01a4 03B70501 		ld	a4,16(a1)
 309              		.loc 1 104 33 discriminator 1
 310 01a8 B386E500 		add	a3,a1,a4
 311              		.loc 1 104 19 discriminator 1
 312 01ac 6388D700 		beq	a5,a3,.L24
 313              	.L21:
 105:src/MemoryAllocator.cpp ****         blk->size += blk->next->size;
 106:src/MemoryAllocator.cpp ****         blk->size += sizeof(FreeBlock);
 107:src/MemoryAllocator.cpp ****         blk->next = blk->next->next;
 108:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 109:src/MemoryAllocator.cpp ****     }
 110:src/MemoryAllocator.cpp **** }...
 314              		.loc 1 110 1
 315 01b0 03348100 		ld	s0,8(sp)
 316              		.cfi_remember_state
 317              		.cfi_restore 8
 318              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccimT1pG.s 			page 9


 319 01b4 13010101 		addi	sp,sp,16
 320              		.cfi_def_cfa_offset 0
 321 01b8 67800000 		jr	ra
 322              	.L24:
 323              		.cfi_restore_state
 105:src/MemoryAllocator.cpp ****         blk->size += blk->next->size;
 324              		.loc 1 105 9 is_stmt 1
 105:src/MemoryAllocator.cpp ****         blk->size += blk->next->size;
 325              		.loc 1 105 33 is_stmt 0
 326 01bc 83B60701 		ld	a3,16(a5)
 105:src/MemoryAllocator.cpp ****         blk->size += blk->next->size;
 327              		.loc 1 105 19
 328 01c0 3307D700 		add	a4,a4,a3
 106:src/MemoryAllocator.cpp ****         blk->size += sizeof(FreeBlock);
 329              		.loc 1 106 9 is_stmt 1
 106:src/MemoryAllocator.cpp ****         blk->size += sizeof(FreeBlock);
 330              		.loc 1 106 19 is_stmt 0
 331 01c4 13078701 		addi	a4,a4,24
 332 01c8 23B8E500 		sd	a4,16(a1)
 107:src/MemoryAllocator.cpp ****         blk->next = blk->next->next;
 333              		.loc 1 107 9 is_stmt 1
 107:src/MemoryAllocator.cpp ****         blk->next = blk->next->next;
 334              		.loc 1 107 32 is_stmt 0
 335 01cc 83B70700 		ld	a5,0(a5)
 107:src/MemoryAllocator.cpp ****         blk->next = blk->next->next;
 336              		.loc 1 107 19
 337 01d0 23B0F500 		sd	a5,0(a1)
 108:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 338              		.loc 1 108 9 is_stmt 1
 339 01d4 E38E07FC 		beqz	a5,.L21
 108:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 340              		.loc 1 108 24 discriminator 1
 108:src/MemoryAllocator.cpp ****         if (blk->next) blk->next->prev = blk;
 341              		.loc 1 108 40 is_stmt 0 discriminator 1
 342 01d8 23B4B700 		sd	a1,8(a5)
 343 01dc 6FF05FFD 		j	.L21
 344              		.cfi_endproc
 345              	.LFE6:
 347              		.align	2
 348              		.globl	_ZN15MemoryAllocator10freeMemoryEPv
 350              	_ZN15MemoryAllocator10freeMemoryEPv:
 351              	.LFB5:
  70:src/MemoryAllocator.cpp **** int MemoryAllocator::freeMemory(void* addr) {
 352              		.loc 1 70 45 is_stmt 1
 353              		.cfi_startproc
 354              	.LVL25:
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
 355              		.loc 1 73 5
 356 01e0 6382050E 		beqz	a1,.L34
  70:src/MemoryAllocator.cpp **** int MemoryAllocator::freeMemory(void* addr) {
 357              		.loc 1 70 45 is_stmt 0 discriminator 1
 358 01e4 130101FE 		addi	sp,sp,-32
 359              		.cfi_def_cfa_offset 32
 360 01e8 233C1100 		sd	ra,24(sp)
 361 01ec 23388100 		sd	s0,16(sp)
 362 01f0 23349100 		sd	s1,8(sp)
 363 01f4 23302101 		sd	s2,0(sp)
GAS LISTING /tmp/ccimT1pG.s 			page 10


 364              		.cfi_offset 1, -8
 365              		.cfi_offset 8, -16
 366              		.cfi_offset 9, -24
 367              		.cfi_offset 18, -32
 368 01f8 13040102 		addi	s0,sp,32
 369              		.cfi_def_cfa 8, 0
 370 01fc 13090500 		mv	s2,a0
 371 0200 13870500 		mv	a4,a1
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
 372              		.loc 1 73 34 discriminator 1
 373 0204 97070000 		la	a5,HEAP_START_ADDR
 373      83B70700 
 374 020c 83B70700 		ld	a5,0(a5)
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
 375              		.loc 1 73 19 discriminator 1
 376 0210 63EEF50A 		bgtu	a5,a1,.L35
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
 377              		.loc 1 73 67 discriminator 2
 378 0214 97070000 		la	a5,HEAP_END_ADDR
 378      83B70700 
 379 021c 83B70700 		ld	a5,0(a5)
  73:src/MemoryAllocator.cpp ****     if( addr == 0 || (char*)addr < HEAP_START_ADDR || (char*)addr > HEAP_END_ADDR){
 380              		.loc 1 73 52 discriminator 2
 381 0220 63EAB70A 		bltu	a5,a1,.L36
  78:src/MemoryAllocator.cpp ****     FreeBlock* blk;
 382              		.loc 1 78 5 is_stmt 1
  79:src/MemoryAllocator.cpp ****     if ( !head || (char*)addr < (char*)head)
 383              		.loc 1 79 5
  79:src/MemoryAllocator.cpp ****     if ( !head || (char*)addr < (char*)head)
 384              		.loc 1 79 11 is_stmt 0
 385 0224 83370500 		ld	a5,0(a0)
  79:src/MemoryAllocator.cpp ****     if ( !head || (char*)addr < (char*)head)
 386              		.loc 1 79 5
 387 0228 638E0700 		beqz	a5,.L37
  79:src/MemoryAllocator.cpp ****     if ( !head || (char*)addr < (char*)head)
 388              		.loc 1 79 16 discriminator 1
 389 022c 63E0F502 		bgtu	a5,a1,.L38
 390              	.L28:
 391              	.LVL26:
  82:src/MemoryAllocator.cpp ****         for ( blk = head; blk->next != 0 && (char*)addr > (char*)(blk->next); blk = blk->next);
 392              		.loc 1 82 42 is_stmt 1 discriminator 4
 393 0230 93840700 		mv	s1,a5
  82:src/MemoryAllocator.cpp ****         for ( blk = head; blk->next != 0 && (char*)addr > (char*)(blk->next); blk = blk->next);
 394              		.loc 1 82 32 is_stmt 0 discriminator 4
 395 0234 83B70700 		ld	a5,0(a5)
 396              	.LVL27:
  82:src/MemoryAllocator.cpp ****         for ( blk = head; blk->next != 0 && (char*)addr > (char*)(blk->next); blk = blk->next);
 397              		.loc 1 82 42 discriminator 4
 398 0238 638C0700 		beqz	a5,.L27
  82:src/MemoryAllocator.cpp ****         for ( blk = head; blk->next != 0 && (char*)addr > (char*)(blk->next); blk = blk->next);
 399              		.loc 1 82 42 discriminator 2
 400 023c E3EAE7FE 		bltu	a5,a4,.L28
 401 0240 6F000001 		j	.L27
 402              	.LVL28:
 403              	.L37:
  80:src/MemoryAllocator.cpp ****         blk = 0;
 404              		.loc 1 80 13
GAS LISTING /tmp/ccimT1pG.s 			page 11


 405 0244 93840700 		mv	s1,a5
 406 0248 6F008000 		j	.L27
 407              	.L38:
 408 024c 93040000 		li	s1,0
 409              	.L27:
 410              	.LVL29:
  85:src/MemoryAllocator.cpp ****     FreeBlock* newBlk = (FreeBlock*)((char*)addr - sizeof(FreeBlock));
 411              		.loc 1 85 5 is_stmt 1
  85:src/MemoryAllocator.cpp ****     FreeBlock* newBlk = (FreeBlock*)((char*)addr - sizeof(FreeBlock));
 412              		.loc 1 85 16 is_stmt 0
 413 0250 930587FE 		addi	a1,a4,-24
 414              	.LVL30:
  86:src/MemoryAllocator.cpp ****     newBlk->prev = blk;
 415              		.loc 1 86 5 is_stmt 1
  86:src/MemoryAllocator.cpp ****     newBlk->prev = blk;
 416              		.loc 1 86 18 is_stmt 0
 417 0254 233897FE 		sd	s1,-16(a4)
  87:src/MemoryAllocator.cpp ****     if (blk) newBlk->next = blk->next;
 418              		.loc 1 87 5 is_stmt 1
 419 0258 638C0404 		beqz	s1,.L29
  87:src/MemoryAllocator.cpp ****     if (blk) newBlk->next = blk->next;
 420              		.loc 1 87 14 discriminator 1
  87:src/MemoryAllocator.cpp ****     if (blk) newBlk->next = blk->next;
 421              		.loc 1 87 34 is_stmt 0 discriminator 1
 422 025c 83B70400 		ld	a5,0(s1)
  87:src/MemoryAllocator.cpp ****     if (blk) newBlk->next = blk->next;
 423              		.loc 1 87 27 discriminator 1
 424 0260 2334F7FE 		sd	a5,-24(a4)
 425              	.L30:
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
 426              		.loc 1 89 5 is_stmt 1
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
 427              		.loc 1 89 17 is_stmt 0
 428 0264 833787FE 		ld	a5,-24(a4)
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
 429              		.loc 1 89 5
 430 0268 63840700 		beqz	a5,.L31
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
 431              		.loc 1 89 23 is_stmt 1 discriminator 1
  89:src/MemoryAllocator.cpp ****     if (newBlk->next) newBlk->next->prev = newBlk;
 432              		.loc 1 89 42 is_stmt 0 discriminator 1
 433 026c 23B4B700 		sd	a1,8(a5)
 434              	.L31:
  90:src/MemoryAllocator.cpp ****     if (blk) blk->next = newBlk;
 435              		.loc 1 90 5 is_stmt 1
 436 0270 63860404 		beqz	s1,.L32
  90:src/MemoryAllocator.cpp ****     if (blk) blk->next = newBlk;
 437              		.loc 1 90 14 discriminator 1
  90:src/MemoryAllocator.cpp ****     if (blk) blk->next = newBlk;
 438              		.loc 1 90 24 is_stmt 0 discriminator 1
 439 0274 23B0B400 		sd	a1,0(s1)
 440              	.L33:
  94:src/MemoryAllocator.cpp ****     tryToMerge(newBlk);
 441              		.loc 1 94 5 is_stmt 1
  94:src/MemoryAllocator.cpp ****     tryToMerge(newBlk);
 442              		.loc 1 94 15 is_stmt 0
 443 0278 13050900 		mv	a0,s2
GAS LISTING /tmp/ccimT1pG.s 			page 12


 444              	.LVL31:
 445 027c 97000000 		call	_ZN15MemoryAllocator10tryToMergeEPNS_9FreeBlockE
 445      E7800000 
 446              	.LVL32:
  95:src/MemoryAllocator.cpp ****     tryToMerge(blk);
 447              		.loc 1 95 5 is_stmt 1
  95:src/MemoryAllocator.cpp ****     tryToMerge(blk);
 448              		.loc 1 95 15 is_stmt 0
 449 0284 93850400 		mv	a1,s1
 450 0288 13050900 		mv	a0,s2
 451 028c 97000000 		call	_ZN15MemoryAllocator10tryToMergeEPNS_9FreeBlockE
 451      E7800000 
 452              	.LVL33:
  97:src/MemoryAllocator.cpp ****     return 0;
 453              		.loc 1 97 5 is_stmt 1
  97:src/MemoryAllocator.cpp ****     return 0;
 454              		.loc 1 97 12 is_stmt 0
 455 0294 13050000 		li	a0,0
 456              	.LVL34:
 457              	.L26:
  98:src/MemoryAllocator.cpp **** }
 458              		.loc 1 98 1
 459 0298 83308101 		ld	ra,24(sp)
 460              		.cfi_remember_state
 461              		.cfi_restore 1
 462 029c 03340101 		ld	s0,16(sp)
 463              		.cfi_restore 8
 464              		.cfi_def_cfa 2, 32
 465 02a0 83348100 		ld	s1,8(sp)
 466              		.cfi_restore 9
 467 02a4 03390100 		ld	s2,0(sp)
 468              		.cfi_restore 18
 469              	.LVL35:
 470 02a8 13010102 		addi	sp,sp,32
 471              		.cfi_def_cfa_offset 0
 472 02ac 67800000 		jr	ra
 473              	.LVL36:
 474              	.L29:
 475              		.cfi_restore_state
  88:src/MemoryAllocator.cpp ****     else newBlk->next = head;
 476              		.loc 1 88 10 is_stmt 1
  88:src/MemoryAllocator.cpp ****     else newBlk->next = head;
 477              		.loc 1 88 25 is_stmt 0
 478 02b0 83370900 		ld	a5,0(s2)
  88:src/MemoryAllocator.cpp ****     else newBlk->next = head;
 479              		.loc 1 88 23
 480 02b4 2334F7FE 		sd	a5,-24(a4)
 481 02b8 6FF0DFFA 		j	.L30
 482              	.L32:
  91:src/MemoryAllocator.cpp ****     else head = newBlk;
 483              		.loc 1 91 10 is_stmt 1
  91:src/MemoryAllocator.cpp ****     else head = newBlk;
 484              		.loc 1 91 15 is_stmt 0
 485 02bc 2330B900 		sd	a1,0(s2)
 486 02c0 6FF09FFB 		j	.L33
 487              	.LVL37:
 488              	.L34:
GAS LISTING /tmp/ccimT1pG.s 			page 13


 489              		.cfi_def_cfa_register 2
 490              		.cfi_restore 1
 491              		.cfi_restore 8
 492              		.cfi_restore 9
 493              		.cfi_restore 18
  74:src/MemoryAllocator.cpp ****         return -1;
 494              		.loc 1 74 17
 495 02c4 1305F0FF 		li	a0,-1
 496              	.LVL38:
  98:src/MemoryAllocator.cpp **** }
 497              		.loc 1 98 1
 498 02c8 67800000 		ret
 499              	.LVL39:
 500              	.L35:
 501              		.cfi_def_cfa_register 8
 502              		.cfi_offset 1, -8
 503              		.cfi_offset 8, -16
 504              		.cfi_offset 9, -24
 505              		.cfi_offset 18, -32
  74:src/MemoryAllocator.cpp ****         return -1;
 506              		.loc 1 74 17
 507 02cc 1305F0FF 		li	a0,-1
 508              	.LVL40:
 509 02d0 6FF09FFC 		j	.L26
 510              	.LVL41:
 511              	.L36:
 512 02d4 1305F0FF 		li	a0,-1
 513              	.LVL42:
 514 02d8 6FF01FFC 		j	.L26
 515              		.cfi_endproc
 516              	.LFE5:
 518              		.bss
 519              		.align	3
 520              		.set	.LANCHOR0,. + 0
 523              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 524 0000 00000000 		.zero	8
 524      00000000 
 527              	_ZZN15MemoryAllocator11getInstanceEvE8instance:
 528 0008 00000000 		.zero	16
 528      00000000 
 528      00000000 
 528      00000000 
 529              		.text
 530              	.Letext0:
 531              		.file 2 "src/../h/../lib/hw.h"
 532              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccimT1pG.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccimT1pG.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC2Ev
     /tmp/ccimT1pG.s:13     .text:0000000000000000 .L0 
     /tmp/ccimT1pG.s:15     .text:0000000000000000 .L0 
     /tmp/ccimT1pG.s:16     .text:0000000000000004 .L0 
     /tmp/ccimT1pG.s:18     .text:0000000000000008 .L0 
     /tmp/ccimT1pG.s:20     .text:000000000000000c .L0 
     /tmp/ccimT1pG.s:23     .text:000000000000000c .L0 
     /tmp/ccimT1pG.s:24     .text:000000000000000c .L0 
     /tmp/ccimT1pG.s:28     .text:000000000000001c .L0 
     /tmp/ccimT1pG.s:29     .text:000000000000001c .L0 
     /tmp/ccimT1pG.s:33     .text:000000000000002c .L0 
     /tmp/ccimT1pG.s:35     .text:0000000000000030 .L0 
     /tmp/ccimT1pG.s:37     .text:0000000000000034 .L0 
     /tmp/ccimT1pG.s:39     .text:0000000000000038 .L0 
     /tmp/ccimT1pG.s:41     .text:000000000000003c .L0 
     /tmp/ccimT1pG.s:43     .text:0000000000000040 .L0 
     /tmp/ccimT1pG.s:45     .text:0000000000000044 .L0 
     /tmp/ccimT1pG.s:46     .text:0000000000000044 .L0 
     /tmp/ccimT1pG.s:48     .text:0000000000000048 .L0 
     /tmp/ccimT1pG.s:51     .text:000000000000004c .L0 
     /tmp/ccimT1pG.s:52     .text:0000000000000050 .L0 
     /tmp/ccimT1pG.s:53     .text:0000000000000050 .L0 
     /tmp/ccimT1pG.s:55     .text:0000000000000054 .L0 
     /tmp/ccimT1pG.s:57     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC1Ev
     /tmp/ccimT1pG.s:65     .text:0000000000000058 _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccimT1pG.s:68     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:69     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:70     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:71     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:74     .text:0000000000000064 .L0 
     /tmp/ccimT1pG.s:75     .text:0000000000000064 .L0 
     /tmp/ccimT1pG.s:79     .text:0000000000000070 .L0 
     /tmp/ccimT1pG.s:80     .text:0000000000000074 .L0 
     /tmp/ccimT1pG.s:83     .text:000000000000007c .L0 
     /tmp/ccimT1pG.s:84     .text:000000000000007c .L0 
     /tmp/ccimT1pG.s:86     .text:0000000000000080 .L0 
     /tmp/ccimT1pG.s:88     .text:0000000000000080 .L0 
     /tmp/ccimT1pG.s:94     .text:000000000000009c .L0 
     /tmp/ccimT1pG.s:95     .text:000000000000009c .L0 
     /tmp/ccimT1pG.s:97     .text:00000000000000a8 .L0 
     /tmp/ccimT1pG.s:99     .text:00000000000000ac .L0 
     /tmp/ccimT1pG.s:100    .text:00000000000000ac .L0 
     /tmp/ccimT1pG.s:102    .text:00000000000000b0 .L0 
     /tmp/ccimT1pG.s:104    .text:00000000000000b4 .L0 
     /tmp/ccimT1pG.s:110    .text:00000000000000b4 _ZN15MemoryAllocator9getMemoryEm
     /tmp/ccimT1pG.s:113    .text:00000000000000b4 .L0 
     /tmp/ccimT1pG.s:115    .text:00000000000000b4 .L0 
     /tmp/ccimT1pG.s:116    .text:00000000000000b8 .L0 
     /tmp/ccimT1pG.s:118    .text:00000000000000bc .L0 
     /tmp/ccimT1pG.s:120    .text:00000000000000c0 .L0 
     /tmp/ccimT1pG.s:123    .text:00000000000000c4 .L0 
     /tmp/ccimT1pG.s:124    .text:00000000000000c4 .L0 
     /tmp/ccimT1pG.s:127    .text:00000000000000c8 .L0 
     /tmp/ccimT1pG.s:128    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccimT1pG.s 			page 15


     /tmp/ccimT1pG.s:129    .text:00000000000000c8 .L0 
     /tmp/ccimT1pG.s:131    .text:00000000000000cc .L0 
     /tmp/ccimT1pG.s:135    .text:00000000000000d4 .L0 
     /tmp/ccimT1pG.s:138    .text:00000000000000d8 .L0 
     /tmp/ccimT1pG.s:142    .text:00000000000000dc .L0 
     /tmp/ccimT1pG.s:143    .text:00000000000000dc .L0 
     /tmp/ccimT1pG.s:145    .text:00000000000000e0 .L0 
     /tmp/ccimT1pG.s:146    .text:00000000000000e0 .L0 
     /tmp/ccimT1pG.s:148    .text:00000000000000e4 .L0 
     /tmp/ccimT1pG.s:150    .text:00000000000000e8 .L0 
     /tmp/ccimT1pG.s:151    .text:00000000000000e8 .L0 
     /tmp/ccimT1pG.s:154    .text:00000000000000ec .L0 
     /tmp/ccimT1pG.s:157    .text:00000000000000f0 .L0 
     /tmp/ccimT1pG.s:159    .text:00000000000000f4 .L0 
     /tmp/ccimT1pG.s:160    .text:00000000000000f4 .L0 
     /tmp/ccimT1pG.s:162    .text:00000000000000f8 .L0 
     /tmp/ccimT1pG.s:166    .text:00000000000000fc .L0 
     /tmp/ccimT1pG.s:170    .text:0000000000000104 .L0 
     /tmp/ccimT1pG.s:171    .text:0000000000000104 .L0 
     /tmp/ccimT1pG.s:173    .text:0000000000000108 .L0 
     /tmp/ccimT1pG.s:174    .text:0000000000000108 .L0 
     /tmp/ccimT1pG.s:177    .text:000000000000010c .L0 
     /tmp/ccimT1pG.s:178    .text:000000000000010c .L0 
     /tmp/ccimT1pG.s:181    .text:0000000000000110 .L0 
     /tmp/ccimT1pG.s:182    .text:0000000000000110 .L0 
     /tmp/ccimT1pG.s:184    .text:0000000000000114 .L0 
     /tmp/ccimT1pG.s:186    .text:0000000000000118 .L0 
     /tmp/ccimT1pG.s:187    .text:0000000000000118 .L0 
     /tmp/ccimT1pG.s:190    .text:000000000000011c .L0 
     /tmp/ccimT1pG.s:191    .text:000000000000011c .L0 
     /tmp/ccimT1pG.s:194    .text:0000000000000120 .L0 
     /tmp/ccimT1pG.s:197    .text:0000000000000124 .L0 
     /tmp/ccimT1pG.s:198    .text:0000000000000124 .L0 
     /tmp/ccimT1pG.s:200    .text:0000000000000128 .L0 
     /tmp/ccimT1pG.s:202    .text:000000000000012c .L0 
     /tmp/ccimT1pG.s:203    .text:000000000000012c .L0 
     /tmp/ccimT1pG.s:206    .text:0000000000000130 .L0 
     /tmp/ccimT1pG.s:212    .text:0000000000000134 .L0 
     /tmp/ccimT1pG.s:213    .text:0000000000000134 .L0 
     /tmp/ccimT1pG.s:215    .text:0000000000000138 .L0 
     /tmp/ccimT1pG.s:216    .text:0000000000000138 .L0 
     /tmp/ccimT1pG.s:218    .text:000000000000013c .L0 
     /tmp/ccimT1pG.s:219    .text:000000000000013c .L0 
     /tmp/ccimT1pG.s:223    .text:0000000000000140 .L0 
     /tmp/ccimT1pG.s:224    .text:0000000000000144 .L0 
     /tmp/ccimT1pG.s:225    .text:0000000000000144 .L0 
     /tmp/ccimT1pG.s:226    .text:0000000000000144 .L0 
     /tmp/ccimT1pG.s:228    .text:0000000000000148 .L0 
     /tmp/ccimT1pG.s:232    .text:000000000000014c .L0 
     /tmp/ccimT1pG.s:236    .text:000000000000014c .L0 
     /tmp/ccimT1pG.s:237    .text:000000000000014c .L0 
     /tmp/ccimT1pG.s:240    .text:0000000000000150 .L0 
     /tmp/ccimT1pG.s:241    .text:0000000000000150 .L0 
     /tmp/ccimT1pG.s:247    .text:0000000000000158 .L0 
     /tmp/ccimT1pG.s:248    .text:0000000000000158 .L0 
     /tmp/ccimT1pG.s:251    .text:000000000000015c .L0 
     /tmp/ccimT1pG.s:253    .text:0000000000000160 .L0 
GAS LISTING /tmp/ccimT1pG.s 			page 16


     /tmp/ccimT1pG.s:254    .text:0000000000000160 .L0 
     /tmp/ccimT1pG.s:257    .text:0000000000000164 .L0 
     /tmp/ccimT1pG.s:260    .text:0000000000000168 .L0 
     /tmp/ccimT1pG.s:261    .text:0000000000000168 .L0 
     /tmp/ccimT1pG.s:263    .text:000000000000016c .L0 
     /tmp/ccimT1pG.s:265    .text:0000000000000170 .L0 
     /tmp/ccimT1pG.s:266    .text:0000000000000170 .L0 
     /tmp/ccimT1pG.s:268    .text:0000000000000174 .L0 
     /tmp/ccimT1pG.s:273    .text:000000000000017c .L0 
     /tmp/ccimT1pG.s:274    .text:000000000000017c .L0 
     /tmp/ccimT1pG.s:276    .text:0000000000000180 .L0 
     /tmp/ccimT1pG.s:279    .text:0000000000000184 .L0 
     /tmp/ccimT1pG.s:280    .text:0000000000000184 .L0 
     /tmp/ccimT1pG.s:283    .text:000000000000018c .L0 
     /tmp/ccimT1pG.s:289    .text:000000000000018c _ZN15MemoryAllocator10tryToMergeEPNS_9FreeBlockE
     /tmp/ccimT1pG.s:292    .text:000000000000018c .L0 
     /tmp/ccimT1pG.s:294    .text:000000000000018c .L0 
     /tmp/ccimT1pG.s:295    .text:0000000000000190 .L0 
     /tmp/ccimT1pG.s:297    .text:0000000000000194 .L0 
     /tmp/ccimT1pG.s:299    .text:0000000000000198 .L0 
     /tmp/ccimT1pG.s:301    .text:0000000000000198 .L0 
     /tmp/ccimT1pG.s:303    .text:000000000000019c .L0 
     /tmp/ccimT1pG.s:304    .text:000000000000019c .L0 
     /tmp/ccimT1pG.s:306    .text:00000000000001a0 .L0 
     /tmp/ccimT1pG.s:308    .text:00000000000001a4 .L0 
     /tmp/ccimT1pG.s:310    .text:00000000000001a8 .L0 
     /tmp/ccimT1pG.s:312    .text:00000000000001ac .L0 
     /tmp/ccimT1pG.s:315    .text:00000000000001b0 .L0 
     /tmp/ccimT1pG.s:316    .text:00000000000001b4 .L0 
     /tmp/ccimT1pG.s:317    .text:00000000000001b4 .L0 
     /tmp/ccimT1pG.s:318    .text:00000000000001b4 .L0 
     /tmp/ccimT1pG.s:320    .text:00000000000001b8 .L0 
     /tmp/ccimT1pG.s:323    .text:00000000000001bc .L0 
     /tmp/ccimT1pG.s:325    .text:00000000000001bc .L0 
     /tmp/ccimT1pG.s:326    .text:00000000000001bc .L0 
     /tmp/ccimT1pG.s:328    .text:00000000000001c0 .L0 
     /tmp/ccimT1pG.s:330    .text:00000000000001c4 .L0 
     /tmp/ccimT1pG.s:331    .text:00000000000001c4 .L0 
     /tmp/ccimT1pG.s:334    .text:00000000000001cc .L0 
     /tmp/ccimT1pG.s:335    .text:00000000000001cc .L0 
     /tmp/ccimT1pG.s:337    .text:00000000000001d0 .L0 
     /tmp/ccimT1pG.s:339    .text:00000000000001d4 .L0 
     /tmp/ccimT1pG.s:341    .text:00000000000001d8 .L0 
     /tmp/ccimT1pG.s:342    .text:00000000000001d8 .L0 
     /tmp/ccimT1pG.s:344    .text:00000000000001e0 .L0 
     /tmp/ccimT1pG.s:350    .text:00000000000001e0 _ZN15MemoryAllocator10freeMemoryEPv
     /tmp/ccimT1pG.s:353    .text:00000000000001e0 .L0 
     /tmp/ccimT1pG.s:355    .text:00000000000001e0 .L0 
     /tmp/ccimT1pG.s:356    .text:00000000000001e0 .L0 
     /tmp/ccimT1pG.s:358    .text:00000000000001e4 .L0 
     /tmp/ccimT1pG.s:359    .text:00000000000001e8 .L0 
     /tmp/ccimT1pG.s:364    .text:00000000000001f8 .L0 
     /tmp/ccimT1pG.s:365    .text:00000000000001f8 .L0 
     /tmp/ccimT1pG.s:366    .text:00000000000001f8 .L0 
     /tmp/ccimT1pG.s:367    .text:00000000000001f8 .L0 
     /tmp/ccimT1pG.s:369    .text:00000000000001fc .L0 
     /tmp/ccimT1pG.s:373    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccimT1pG.s 			page 17


     /tmp/ccimT1pG.s:376    .text:0000000000000210 .L0 
     /tmp/ccimT1pG.s:378    .text:0000000000000214 .L0 
     /tmp/ccimT1pG.s:381    .text:0000000000000220 .L0 
     /tmp/ccimT1pG.s:383    .text:0000000000000224 .L0 
     /tmp/ccimT1pG.s:384    .text:0000000000000224 .L0 
     /tmp/ccimT1pG.s:385    .text:0000000000000224 .L0 
     /tmp/ccimT1pG.s:387    .text:0000000000000228 .L0 
     /tmp/ccimT1pG.s:389    .text:000000000000022c .L0 
     /tmp/ccimT1pG.s:393    .text:0000000000000230 .L0 
     /tmp/ccimT1pG.s:395    .text:0000000000000234 .L0 
     /tmp/ccimT1pG.s:398    .text:0000000000000238 .L0 
     /tmp/ccimT1pG.s:400    .text:000000000000023c .L0 
     /tmp/ccimT1pG.s:405    .text:0000000000000244 .L0 
     /tmp/ccimT1pG.s:412    .text:0000000000000250 .L0 
     /tmp/ccimT1pG.s:413    .text:0000000000000250 .L0 
     /tmp/ccimT1pG.s:416    .text:0000000000000254 .L0 
     /tmp/ccimT1pG.s:417    .text:0000000000000254 .L0 
     /tmp/ccimT1pG.s:419    .text:0000000000000258 .L0 
     /tmp/ccimT1pG.s:421    .text:000000000000025c .L0 
     /tmp/ccimT1pG.s:422    .text:000000000000025c .L0 
     /tmp/ccimT1pG.s:424    .text:0000000000000260 .L0 
     /tmp/ccimT1pG.s:427    .text:0000000000000264 .L0 
     /tmp/ccimT1pG.s:428    .text:0000000000000264 .L0 
     /tmp/ccimT1pG.s:430    .text:0000000000000268 .L0 
     /tmp/ccimT1pG.s:432    .text:000000000000026c .L0 
     /tmp/ccimT1pG.s:433    .text:000000000000026c .L0 
     /tmp/ccimT1pG.s:436    .text:0000000000000270 .L0 
     /tmp/ccimT1pG.s:438    .text:0000000000000274 .L0 
     /tmp/ccimT1pG.s:439    .text:0000000000000274 .L0 
     /tmp/ccimT1pG.s:442    .text:0000000000000278 .L0 
     /tmp/ccimT1pG.s:443    .text:0000000000000278 .L0 
     /tmp/ccimT1pG.s:448    .text:0000000000000284 .L0 
     /tmp/ccimT1pG.s:449    .text:0000000000000284 .L0 
     /tmp/ccimT1pG.s:454    .text:0000000000000294 .L0 
     /tmp/ccimT1pG.s:455    .text:0000000000000294 .L0 
     /tmp/ccimT1pG.s:459    .text:0000000000000298 .L0 
     /tmp/ccimT1pG.s:460    .text:000000000000029c .L0 
     /tmp/ccimT1pG.s:461    .text:000000000000029c .L0 
     /tmp/ccimT1pG.s:463    .text:00000000000002a0 .L0 
     /tmp/ccimT1pG.s:464    .text:00000000000002a0 .L0 
     /tmp/ccimT1pG.s:466    .text:00000000000002a4 .L0 
     /tmp/ccimT1pG.s:468    .text:00000000000002a8 .L0 
     /tmp/ccimT1pG.s:471    .text:00000000000002ac .L0 
     /tmp/ccimT1pG.s:475    .text:00000000000002b0 .L0 
     /tmp/ccimT1pG.s:477    .text:00000000000002b0 .L0 
     /tmp/ccimT1pG.s:478    .text:00000000000002b0 .L0 
     /tmp/ccimT1pG.s:480    .text:00000000000002b4 .L0 
     /tmp/ccimT1pG.s:484    .text:00000000000002bc .L0 
     /tmp/ccimT1pG.s:485    .text:00000000000002bc .L0 
     /tmp/ccimT1pG.s:489    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:490    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:491    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:492    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:493    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:495    .text:00000000000002c4 .L0 
     /tmp/ccimT1pG.s:498    .text:00000000000002c8 .L0 
     /tmp/ccimT1pG.s:501    .text:00000000000002cc .L0 
GAS LISTING /tmp/ccimT1pG.s 			page 18


     /tmp/ccimT1pG.s:502    .text:00000000000002cc .L0 
     /tmp/ccimT1pG.s:503    .text:00000000000002cc .L0 
     /tmp/ccimT1pG.s:504    .text:00000000000002cc .L0 
     /tmp/ccimT1pG.s:505    .text:00000000000002cc .L0 
     /tmp/ccimT1pG.s:507    .text:00000000000002cc .L0 
     /tmp/ccimT1pG.s:515    .text:00000000000002dc .L0 
     /tmp/ccimT1pG.s:520    .bss:0000000000000000 .LANCHOR0
     /tmp/ccimT1pG.s:523    .bss:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccimT1pG.s:527    .bss:0000000000000008 _ZZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccimT1pG.s:533    .text:00000000000002dc .L0 
     /tmp/ccimT1pG.s:24     .text:000000000000000c .L0 
     /tmp/ccimT1pG.s:29     .text:000000000000001c .L0 
     /tmp/ccimT1pG.s:71     .text:0000000000000058 .L0 
     /tmp/ccimT1pG.s:75     .text:0000000000000064 .L0 
     /tmp/ccimT1pG.s:88     .text:0000000000000080 .L0 
     /tmp/ccimT1pG.s:92     .text:0000000000000094 .L0 
     /tmp/ccimT1pG.s:95     .text:000000000000009c .L0 
     /tmp/ccimT1pG.s:373    .text:0000000000000204 .L0 
     /tmp/ccimT1pG.s:378    .text:0000000000000214 .L0 
     /tmp/ccimT1pG.s:77     .text:0000000000000070 .L9
     /tmp/ccimT1pG.s:140    .text:00000000000000dc .L13
     /tmp/ccimT1pG.s:155    .text:00000000000000f0 .L12
     /tmp/ccimT1pG.s:221    .text:0000000000000140 .L10
     /tmp/ccimT1pG.s:244    .text:0000000000000158 .L15
     /tmp/ccimT1pG.s:231    .text:000000000000014c .L16
     /tmp/ccimT1pG.s:195    .text:0000000000000124 .L17
     /tmp/ccimT1pG.s:271    .text:000000000000017c .L19
     /tmp/ccimT1pG.s:208    .text:0000000000000134 .L18
     /tmp/ccimT1pG.s:313    .text:00000000000001b0 .L21
     /tmp/ccimT1pG.s:322    .text:00000000000001bc .L24
     /tmp/ccimT1pG.s:488    .text:00000000000002c4 .L34
     /tmp/ccimT1pG.s:500    .text:00000000000002cc .L35
     /tmp/ccimT1pG.s:511    .text:00000000000002d4 .L36
     /tmp/ccimT1pG.s:403    .text:0000000000000244 .L37
     /tmp/ccimT1pG.s:407    .text:000000000000024c .L38
     /tmp/ccimT1pG.s:409    .text:0000000000000250 .L27
     /tmp/ccimT1pG.s:390    .text:0000000000000230 .L28
     /tmp/ccimT1pG.s:474    .text:00000000000002b0 .L29
     /tmp/ccimT1pG.s:434    .text:0000000000000270 .L31
     /tmp/ccimT1pG.s:482    .text:00000000000002bc .L32
     /tmp/ccimT1pG.s:425    .text:0000000000000264 .L30
     /tmp/ccimT1pG.s:440    .text:0000000000000278 .L33
     /tmp/ccimT1pG.s:457    .text:0000000000000298 .L26
     /tmp/ccimT1pG.s:1058   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccimT1pG.s:2075   .debug_str:0000000000000173 .LASF39
     /tmp/ccimT1pG.s:2097   .debug_str:00000000000002fc .LASF40
     /tmp/ccimT1pG.s:2041   .debug_str:0000000000000044 .LASF41
     /tmp/ccimT1pG.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccimT1pG.s:530    .text:00000000000002dc .Letext0
     /tmp/ccimT1pG.s:2027   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccimT1pG.s:2085   .debug_str:0000000000000290 .LASF0
     /tmp/ccimT1pG.s:2065   .debug_str:0000000000000121 .LASF1
     /tmp/ccimT1pG.s:2053   .debug_str:00000000000000bf .LASF2
     /tmp/ccimT1pG.s:2039   .debug_str:000000000000003d .LASF4
     /tmp/ccimT1pG.s:2061   .debug_str:000000000000010a .LASF3
     /tmp/ccimT1pG.s:2033   .debug_str:0000000000000023 .LASF5
     /tmp/ccimT1pG.s:2029   .debug_str:0000000000000000 .LASF6
GAS LISTING /tmp/ccimT1pG.s 			page 19


     /tmp/ccimT1pG.s:2049   .debug_str:000000000000009d .LASF7
     /tmp/ccimT1pG.s:2091   .debug_str:00000000000002ca .LASF8
     /tmp/ccimT1pG.s:2037   .debug_str:000000000000002f .LASF9
     /tmp/ccimT1pG.s:2125   .debug_str:00000000000003cf .LASF10
     /tmp/ccimT1pG.s:2051   .debug_str:00000000000000b0 .LASF11
     /tmp/ccimT1pG.s:2115   .debug_str:00000000000003a0 .LASF12
     /tmp/ccimT1pG.s:2099   .debug_str:0000000000000314 .LASF13
     /tmp/ccimT1pG.s:2069   .debug_str:0000000000000155 .LASF14
     /tmp/ccimT1pG.s:2045   .debug_str:0000000000000082 .LASF15
     /tmp/ccimT1pG.s:2093   .debug_str:00000000000002da .LASF16
     /tmp/ccimT1pG.s:2031   .debug_str:0000000000000013 .LASF20
     /tmp/ccimT1pG.s:2111   .debug_str:0000000000000391 .LASF42
     /tmp/ccimT1pG.s:2035   .debug_str:000000000000002a .LASF17
     /tmp/ccimT1pG.s:2121   .debug_str:00000000000003bf .LASF18
     /tmp/ccimT1pG.s:2119   .debug_str:00000000000003ba .LASF19
     /tmp/ccimT1pG.s:2059   .debug_str:00000000000000ee .LASF21
     /tmp/ccimT1pG.s:2103   .debug_str:0000000000000332 .LASF22
     /tmp/ccimT1pG.s:2117   .debug_str:00000000000003b0 .LASF23
     /tmp/ccimT1pG.s:2057   .debug_str:00000000000000d2 .LASF24
     /tmp/ccimT1pG.s:2043   .debug_str:0000000000000067 .LASF25
     /tmp/ccimT1pG.s:2095   .debug_str:00000000000002f0 .LASF43
     /tmp/ccimT1pG.s:2089   .debug_str:00000000000002a6 .LASF44
     /tmp/ccimT1pG.s:2079   .debug_str:0000000000000250 .LASF26
     /tmp/ccimT1pG.s:2067   .debug_str:0000000000000134 .LASF27
     /tmp/ccimT1pG.s:2123   .debug_str:00000000000003c4 .LASF28
     /tmp/ccimT1pG.s:2105   .debug_str:000000000000034d .LASF29
     /tmp/ccimT1pG.s:2081   .debug_str:000000000000025a .LASF30
     /tmp/ccimT1pG.s:2113   .debug_str:000000000000039b .LASF31
     /tmp/ccimT1pG.s:2077   .debug_str:0000000000000237 .LASF45
     /tmp/ccimT1pG.s:2071   .debug_str:0000000000000161 .LASF46
     /tmp/ccimT1pG.s:2083   .debug_str:000000000000025f .LASF47
     /tmp/ccimT1pG.s:290    .text:000000000000018c .LFB6
     /tmp/ccimT1pG.s:345    .text:00000000000001e0 .LFE6
     /tmp/ccimT1pG.s:2055   .debug_str:00000000000000cd .LASF32
     /tmp/ccimT1pG.s:351    .text:00000000000001e0 .LFB5
     /tmp/ccimT1pG.s:516    .text:00000000000002dc .LFE5
     /tmp/ccimT1pG.s:1723   .debug_loc:0000000000000000 .LLST7
     /tmp/ccimT1pG.s:2047   .debug_str:0000000000000098 .LASF33
     /tmp/ccimT1pG.s:1768   .debug_loc:00000000000000c1 .LLST8
     /tmp/ccimT1pG.s:1794   .debug_loc:0000000000000133 .LLST9
     /tmp/ccimT1pG.s:2073   .debug_str:000000000000016c .LASF34
     /tmp/ccimT1pG.s:1813   .debug_loc:000000000000018f .LLST10
     /tmp/ccimT1pG.s:446    .text:0000000000000284 .LVL32
     /tmp/ccimT1pG.s:452    .text:0000000000000294 .LVL33
     /tmp/ccimT1pG.s:111    .text:00000000000000b4 .LFB4
     /tmp/ccimT1pG.s:284    .text:000000000000018c .LFE4
     /tmp/ccimT1pG.s:1833   .debug_loc:00000000000001dd .LLST0
     /tmp/ccimT1pG.s:1866   .debug_loc:0000000000000265 .LLST1
     /tmp/ccimT1pG.s:1898   .debug_loc:00000000000002ec .LLST2
     /tmp/ccimT1pG.s:2063   .debug_str:000000000000011c .LASF35
     /tmp/ccimT1pG.s:1909   .debug_loc:0000000000000322 .LLST3
     /tmp/ccimT1pG.s:2101   .debug_str:0000000000000324 .LASF36
     /tmp/ccimT1pG.s:1933   .debug_loc:0000000000000374 .LLST4
     /tmp/ccimT1pG.s:2019   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccimT1pG.s:2107   .debug_str:0000000000000371 .LASF37
     /tmp/ccimT1pG.s:1970   .debug_loc:00000000000003f1 .LLST5
     /tmp/ccimT1pG.s:1995   .debug_loc:0000000000000444 .LLST6
GAS LISTING /tmp/ccimT1pG.s 			page 20


     /tmp/ccimT1pG.s:66     .text:0000000000000058 .LFB3
     /tmp/ccimT1pG.s:105    .text:00000000000000b4 .LFE3
     /tmp/ccimT1pG.s:2087   .debug_str:000000000000029d .LASF38
     /tmp/ccimT1pG.s:90     .text:0000000000000090 .LVL1
     /tmp/ccimT1pG.s:2109   .debug_str:0000000000000378 .LASF48
     /tmp/ccimT1pG.s:10     .text:0000000000000000 .LFB1
     /tmp/ccimT1pG.s:58     .text:0000000000000058 .LFE1
     /tmp/ccimT1pG.s:354    .text:00000000000001e0 .LVL25
     /tmp/ccimT1pG.s:444    .text:000000000000027c .LVL31
     /tmp/ccimT1pG.s:469    .text:00000000000002a8 .LVL35
     /tmp/ccimT1pG.s:473    .text:00000000000002b0 .LVL36
     /tmp/ccimT1pG.s:496    .text:00000000000002c8 .LVL38
     /tmp/ccimT1pG.s:499    .text:00000000000002cc .LVL39
     /tmp/ccimT1pG.s:508    .text:00000000000002d0 .LVL40
     /tmp/ccimT1pG.s:510    .text:00000000000002d4 .LVL41
     /tmp/ccimT1pG.s:513    .text:00000000000002d8 .LVL42
     /tmp/ccimT1pG.s:414    .text:0000000000000254 .LVL30
     /tmp/ccimT1pG.s:487    .text:00000000000002c4 .LVL37
     /tmp/ccimT1pG.s:391    .text:0000000000000230 .LVL26
     /tmp/ccimT1pG.s:396    .text:0000000000000238 .LVL27
     /tmp/ccimT1pG.s:402    .text:0000000000000244 .LVL28
     /tmp/ccimT1pG.s:410    .text:0000000000000250 .LVL29
     /tmp/ccimT1pG.s:456    .text:0000000000000298 .LVL34
     /tmp/ccimT1pG.s:114    .text:00000000000000b4 .LVL2
     /tmp/ccimT1pG.s:125    .text:00000000000000c8 .LVL3
     /tmp/ccimT1pG.s:192    .text:0000000000000120 .LVL12
     /tmp/ccimT1pG.s:230    .text:000000000000014c .LVL16
     /tmp/ccimT1pG.s:255    .text:0000000000000164 .LVL20
     /tmp/ccimT1pG.s:270    .text:000000000000017c .LVL22
     /tmp/ccimT1pG.s:136    .text:00000000000000d8 .LVL5
     /tmp/ccimT1pG.s:139    .text:00000000000000dc .LVL6
     /tmp/ccimT1pG.s:175    .text:000000000000010c .LVL9
     /tmp/ccimT1pG.s:188    .text:000000000000011c .LVL11
     /tmp/ccimT1pG.s:238    .text:0000000000000150 .LVL17
     /tmp/ccimT1pG.s:243    .text:0000000000000158 .LVL18
     /tmp/ccimT1pG.s:220    .text:0000000000000140 .LVL15
     /tmp/ccimT1pG.s:133    .text:00000000000000d4 .LVL4
     /tmp/ccimT1pG.s:163    .text:00000000000000fc .LVL8
     /tmp/ccimT1pG.s:204    .text:0000000000000130 .LVL13
     /tmp/ccimT1pG.s:207    .text:0000000000000134 .LVL14
     /tmp/ccimT1pG.s:249    .text:000000000000015c .LVL19
     /tmp/ccimT1pG.s:258    .text:0000000000000168 .LVL21
     /tmp/ccimT1pG.s:277    .text:0000000000000184 .LVL23
     /tmp/ccimT1pG.s:179    .text:0000000000000110 .LVL10
     /tmp/ccimT1pG.s:534    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccimT1pG.s:168    .text:0000000000000104 .LBB4
     /tmp/ccimT1pG.s:209    .text:0000000000000134 .LBE4
     /tmp/ccimT1pG.s:234    .text:000000000000014c .LBB5
     /tmp/ccimT1pG.s:245    .text:0000000000000158 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
